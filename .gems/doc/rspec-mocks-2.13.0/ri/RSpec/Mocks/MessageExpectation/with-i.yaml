--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Constrains a stub or message expectation to invocations with specific arguments.
- !ruby/struct:SM::Flow::P 
  body: With a stub, if the message might be received with other args as well, you should stub a default value first, and then stub or mock the same message using `with` to constrain to specific arguments.
- !ruby/struct:SM::Flow::P 
  body: A message expectation will fail if the message is received with different arguments.
- !ruby/struct:SM::Flow::P 
  body: "@example"
- !ruby/struct:SM::Flow::VERB 
  body: "  cart.stub(:add) { :failure }\n  cart.stub(:add).with(Book.new(:isbn =&gt; 1934356379)) { :success }\n  cart.add(Book.new(:isbn =&gt; 1234567890))\n  # =&gt; :failure\n  cart.add(Book.new(:isbn =&gt; 1934356379))\n  # =&gt; :success\n\n  cart.should_receive(:add).with(Book.new(:isbn =&gt; 1934356379)) { :success }\n  cart.add(Book.new(:isbn =&gt; 1234567890))\n  # =&gt; failed expectation\n  cart.add(Book.new(:isbn =&gt; 1934356379))\n  # =&gt; passes\n"
full_name: RSpec::Mocks::MessageExpectation#with
is_singleton: false
name: with
params: (*args, &block)
visibility: public
