--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: "@overload and_return(value) @overload and_return(first_value, second_value) @overload and_return(&amp;block)"
- !ruby/struct:SM::Flow::P 
  body: Tells the object to return a value when it receives the message. Given more than one value, the first value is returned the first time the message is received, the second value is returned the next time, etc, etc.
- !ruby/struct:SM::Flow::P 
  body: If the message is received more times than there are values, the last value is received for every subsequent call.
- !ruby/struct:SM::Flow::P 
  body: The block format is still supported, but is unofficially deprecated in favor of just passing a block to the stub method.
- !ruby/struct:SM::Flow::P 
  body: "@example"
- !ruby/struct:SM::Flow::VERB 
  body: "  counter.stub(:count).and_return(1)\n  counter.count # =&gt; 1\n  counter.count # =&gt; 1\n\n  counter.stub(:count).and_return(1,2,3)\n  counter.count # =&gt; 1\n  counter.count # =&gt; 2\n  counter.count # =&gt; 3\n  counter.count # =&gt; 3\n  counter.count # =&gt; 3\n  # etc\n\n  # Supported, but ...\n  counter.stub(:count).and_return { 1 }\n  counter.count # =&gt; 1\n\n  # ... this is prefered\n  counter.stub(:count) { 1 }\n  counter.count # =&gt; 1\n"
full_name: RSpec::Mocks::MessageExpectation#and_return
is_singleton: false
name: and_return
params: (*values, &implementation)
visibility: public
