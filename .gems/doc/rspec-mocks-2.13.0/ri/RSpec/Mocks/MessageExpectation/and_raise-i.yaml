--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: "@overload and_raise @overload and_raise(ExceptionClass) @overload and_raise(ExceptionClass, message) @overload and_raise(exception_instance)"
- !ruby/struct:SM::Flow::P 
  body: Tells the object to raise an exception when the message is received.
- !ruby/struct:SM::Flow::P 
  body: "@note"
- !ruby/struct:SM::Flow::VERB 
  body: "  When you pass an exception class, the MessageExpectation will raise\n  an instance of it, creating it with `exception` and passing `message`\n  if specified.  If the exception class initializer requires more than\n  one parameters, you must pass in an instance and not the class,\n  otherwise this method will raise an ArgumentError exception.\n"
- !ruby/struct:SM::Flow::P 
  body: "@example"
- !ruby/struct:SM::Flow::VERB 
  body: "  car.stub(:go).and_raise\n  car.stub(:go).and_raise(OutOfGas)\n  car.stub(:go).and_raise(OutOfGas, &quot;At least 2 oz of gas needed to drive&quot;)\n  car.stub(:go).and_raise(OutOfGas.new(2, :oz))\n"
full_name: RSpec::Mocks::MessageExpectation#and_raise
is_singleton: false
name: and_raise
params: (exception = RuntimeError, message = nil)
visibility: public
