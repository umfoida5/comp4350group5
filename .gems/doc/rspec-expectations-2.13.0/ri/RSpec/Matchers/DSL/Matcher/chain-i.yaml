--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Convenience for defining methods on this matcher to create a fluent interface. The trick about fluent interfaces is that each method must return self in order to chain methods together. `chain` handles that for you.
- !ruby/struct:SM::Flow::P 
  body: "@example"
- !ruby/struct:SM::Flow::VERB 
  body: "    RSpec::Matchers.define :have_errors_on do |key|\n      chain :with do |message|\n        @message = message\n      end\n\n      match do |actual|\n        actual.errors[key] == @message\n      end\n    end\n\n    minor.should have_errors_on(:age).with(&quot;Not old enough to participate&quot;)\n"
full_name: RSpec::Matchers::DSL::Matcher#chain
is_singleton: false
name: chain
params: (method, &block)
visibility: public
