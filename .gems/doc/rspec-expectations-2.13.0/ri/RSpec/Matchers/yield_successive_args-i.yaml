--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Designed for use with methods that repeatedly yield (such as iterators). Passes if the method called in the expect block yields multiple times with arguments matching those given.
- !ruby/struct:SM::Flow::P 
  body: Argument matching is done using `===` (the case match operator) and `==`. If the expected and actual arguments match with either operator, the matcher will pass.
- !ruby/struct:SM::Flow::P 
  body: "@example"
- !ruby/struct:SM::Flow::VERB 
  body: "  expect { |b| [1, 2, 3].each(&amp;b) }.to yield_successive_args(1, 2, 3)\n  expect { |b| { :a =&gt; 1, :b =&gt; 2 }.each(&amp;b) }.to yield_successive_args([:a, 1], [:b, 2])\n  expect { |b| [1, 2, 3].each(&amp;b) }.not_to yield_successive_args(1, 2)\n"
- !ruby/struct:SM::Flow::P 
  body: "@note Your expect block must accept a parameter and pass it on to"
- !ruby/struct:SM::Flow::VERB 
  body: "  the method-under-test as a block.\n"
full_name: RSpec::Matchers#yield_successive_args
is_singleton: false
name: yield_successive_args
params: (*args)
visibility: public
