--- !ruby/object:RI::MethodDescription 
aliases: 
- !ruby/object:RI::AliasName 
  name: raise_exception
block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: With no args, matches if any error is raised. With a named error, matches only if that specific error is raised. With a named error and messsage specified as a String, matches only if both match. With a named error and messsage specified as a Regexp, matches only if both match. Pass an optional block to perform extra verifications on the exception matched
- !ruby/struct:SM::Flow::P 
  body: "@example"
- !ruby/struct:SM::Flow::VERB 
  body: "  lambda { do_something_risky }.should raise_error\n  lambda { do_something_risky }.should raise_error(PoorRiskDecisionError)\n  lambda { do_something_risky }.should raise_error(PoorRiskDecisionError) { |error| error.data.should == 42 }\n  lambda { do_something_risky }.should raise_error(PoorRiskDecisionError, &quot;that was too risky&quot;)\n  lambda { do_something_risky }.should raise_error(PoorRiskDecisionError, /oo ri/)\n\n  lambda { do_something_risky }.should_not raise_error\n  lambda { do_something_risky }.should_not raise_error(PoorRiskDecisionError)\n  lambda { do_something_risky }.should_not raise_error(PoorRiskDecisionError, &quot;that was too risky&quot;)\n  lambda { do_something_risky }.should_not raise_error(PoorRiskDecisionError, /oo ri/)\n"
full_name: RSpec::Matchers#raise_error
is_singleton: false
name: raise_error
params: (error=Exception, message=nil, &block)
visibility: public
