--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Passes if actual contains all of the expected regardless of order. This works for collections. Pass in multiple args and it will only pass if all args are found in collection.
- !ruby/struct:SM::Flow::P 
  body: "@note This is also available using the `=~` operator with `should`,"
- !ruby/struct:SM::Flow::VERB 
  body: "      but `=~` is not supported with `expect`.\n"
- !ruby/struct:SM::Flow::P 
  body: "@note There is no should_not version of array.should =~ other_array"
- !ruby/struct:SM::Flow::P 
  body: "@example"
- !ruby/struct:SM::Flow::VERB 
  body: "  expect([1,2,3]).to match_array([1,2,3])\n  expect([1,2,3]).to match_array([1,3,2])\n  [1,2,3].should   =~ [1,2,3]   # =&gt; would pass\n  [1,2,3].should   =~ [2,3,1]   # =&gt; would pass\n  [1,2,3,4].should =~ [1,2,3]   # =&gt; would fail\n  [1,2,2,3].should =~ [1,2,3]   # =&gt; would fail\n  [1,2,3].should   =~ [1,2,3,4] # =&gt; would fail\n"
full_name: RSpec::Matchers#match_array
is_singleton: false
name: match_array
params: (array)
visibility: public
