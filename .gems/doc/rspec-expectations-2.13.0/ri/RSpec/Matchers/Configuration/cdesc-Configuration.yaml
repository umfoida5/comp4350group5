--- !ruby/object:RI::ClassDescription 
attributes: 
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: Sets or gets the backtrace formatter. The backtrace formatter should implement `#format_backtrace(Array&lt;String&gt;)`. This is used to format backtraces of errors handled by the `raise_error` matcher.
  - !ruby/struct:SM::Flow::P 
    body: If you are using rspec-core, rspec-core's backtrace formatting will be used (including respecting the presence or absence of the `--backtrace` option).
  - !ruby/struct:SM::Flow::P 
    body: "@overload backtrace_formatter"
  - !ruby/struct:SM::Flow::VERB 
    body: "  @return [#format_backtrace] the backtrace formatter\n"
  - !ruby/struct:SM::Flow::P 
    body: "@overload backtrace_formatter="
  - !ruby/struct:SM::Flow::VERB 
    body: "  @param value [#format_backtrace] sets the backtrace formatter\n"
  name: backtrace_formatter
  rw: W
class_methods: []

comment: 
- !ruby/struct:SM::Flow::P 
  body: Provides configuration options for rspec-expectations.
constants: 
- !ruby/object:RI::Constant 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: "@api private"
  name: NullBacktraceFormatter
  value: Module.new do         def self.format_backtrace(backtrace)
full_name: RSpec::Matchers::Configuration
includes: []

instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: add_should_and_should_not_to
- !ruby/object:RI::MethodSummary 
  name: backtrace_formatter
- !ruby/object:RI::MethodSummary 
  name: color?
- !ruby/object:RI::MethodSummary 
  name: color?
- !ruby/object:RI::MethodSummary 
  name: syntax
- !ruby/object:RI::MethodSummary 
  name: syntax=
name: Configuration
superclass: Object
