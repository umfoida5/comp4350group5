--- !ruby/object:RI::MethodDescription 
aliases: 
- !ruby/object:RI::AliasName 
  name: prepend_after
block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: "@api public @overload after(&amp;block) @overload after(scope, &amp;block) @overload after(scope, conditions, &amp;block) @overload after(conditions, &amp;block)"
- !ruby/struct:SM::Flow::P 
  body: "@param [Symbol] scope `:each`, `:all`, or `:suite` (defaults to `:each`) @param [Hash] conditions"
- !ruby/struct:SM::Flow::VERB 
  body: "  constrains this hook to examples matching these conditions e.g.\n  `after(:each, :ui =&gt; true) { ... }` will only run with examples or\n  groups declared with `:ui =&gt; true`.\n"
- !ruby/struct:SM::Flow::P 
  body: "@see #before @see #around @see ExampleGroup @see SharedContext @see SharedExampleGroup @see Configuration"
- !ruby/struct:SM::Flow::P 
  body: Declare a block of code to be run after each example (using `:each`) or once after all examples (using `:all`). See [#before](Hooks#before-instance_method) for more information about ordering.
- !ruby/struct:SM::Flow::P 
  body: "### Exceptions"
- !ruby/struct:SM::Flow::P 
  body: `after` hooks are guaranteed to run even when there are exceptions in `before` hooks or examples. When an exception is raised in an after block, the exception is captured for later reporting, and subsequent `after` blocks are run.
- !ruby/struct:SM::Flow::P 
  body: "### Order"
- !ruby/struct:SM::Flow::P 
  body: "`after` hooks are stored in three scopes, which are run in order: `:each`, `:all`, and `:suite`. They can also be declared in several different places: `RSpec.configure`, a parent group, the current group. They are run in the following order:"
- !ruby/struct:SM::Flow::VERB 
  body: "    after(:each) # declared in the current group\n    after(:each) # declared in a parent group\n    after(:each) # declared in RSpec.configure\n    after(:all)  # declared in the current group\n    after(:all)  # declared in a parent group\n    after(:all)  # declared in RSpec.configure\n"
- !ruby/struct:SM::Flow::P 
  body: This is the reverse of the order in which `before` hooks are run. Similarly, if more than one `after` is declared within any one scope, they are run in reverse order of that in which they are declared.
full_name: RSpec::Core::Hooks#after
is_singleton: false
name: after
params: (*args, &block)
visibility: public
