--- !ruby/object:RI::MethodDescription 
aliases: 
- !ruby/object:RI::AliasName 
  name: shared_context
- !ruby/object:RI::AliasName 
  name: share_examples_for
- !ruby/object:RI::AliasName 
  name: shared_examples_for
block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: "@overload shared_examples(name, &amp;block) @overload shared_examples(name, tags, &amp;block)"
- !ruby/struct:SM::Flow::P 
  body: Wraps the `block` in a module which can then be included in example groups using `include_examples`, `include_context`, or `it_behaves_like`.
- !ruby/struct:SM::Flow::P 
  body: "@param [String] name to match when looking up this shared group @param block to be eval'd in a nested example group generated by `it_behaves_like`"
- !ruby/struct:SM::Flow::P 
  body: "@example"
- !ruby/struct:SM::Flow::VERB 
  body: "  shared_examples &quot;auditable&quot; do\n    it &quot;stores an audit record on save!&quot; do\n      lambda { auditable.save! }.should change(Audit, :count).by(1)\n    end\n  end\n\n  class Account do\n    it_behaves_like &quot;auditable&quot; do\n      def auditable; Account.new; end\n    end\n  end\n"
- !ruby/struct:SM::Flow::P 
  body: "@see ExampleGroup.it_behaves_like @see ExampleGroup.include_examples @see ExampleGroup.include_context"
full_name: RSpec::Core::SharedExampleGroup#shared_examples
is_singleton: false
name: shared_examples
params: (*args, &block)
visibility: public
